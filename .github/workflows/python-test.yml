# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Test ðŸ§ª
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
    - name: Install dependencies
      run: poetry install
    - name: Test with pytest
      run: poetry run pytest
      
  lint:
    name: Lint ðŸ§¹
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      - name: Run Ruff
        run: |
          ruff check --output-format=github .
          ruff format --check .

  sample_app:
    name: Sample App ðŸš€
    runs-on: ubuntu-latest
    env:
      SIGNING_KEY: 123456
      ACCESS_TOKEN_COOKIE_NAME: cookie_1
      REFRESH_TOKEN_COOKIE_NAME: cookie_2
      ALGORITHM: HS384
    defaults:
      run:
        working-directory: tests/sample_app
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Install dependencies
        run: poetry install
      - name: Django Check
        run: poetry run python manage.py check
