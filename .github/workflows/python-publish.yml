# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

# Python package publishing guide:
# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # Download the latest Python version
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    # Install build (docs: https://build.pypa.io/en/stable/index.html)
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      run: python -m build

    # Upload the package as an artifact
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: Publish to PyPI ðŸ“¦
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/drf-cookie-jwtauth/
    permissions:
      id-token: write  # mandatory for trusted publishing
    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish to PyPI ðŸ“¦
        uses: pypa/gh-action-pypi-publish@release/v1
